swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger RestAPI
consumes:
  - application/json
produces:
  - application/json

basePath: /api

#Paths supported
#SALES, PURCHASES
paths:
  /sales/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_sales
      tags:
        - Sales, Purchases
      summary: Read the table sales
      description: |
        Read the table sales using a list of ids.
      responses:
        200:
          description: Successfully read sale

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search and delete. All values that matches will be deleted.
      operationId: db_views.delete_sale
      tags:
        - Sales, Purchases
      summary: Delete rows of the table sales
      description: Delete all corresponding rows (by id) in the table sales.
      responses:
        200:
          description: Successfully deleted sales.

  /sales:
    post:
      parameters:
        - name: sales
          in: body
          description: a list of sales to be saved
          required: True
          schema:
            type: object
            properties:
              sales:
                type: array
                items:
                  type: object
                  properties:
                      idSales:
                        type: integer
                      Date_sales:
                        type: string
                      CodSales:
                        type: integer
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      Customer:
                        type: string
                      idCustomers:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Service:
                        type: string
                      idServices:
                        type: integer
                      Receipt:
                        type: number
                      idReceipts:
                        type: integer
                      idDeliveries:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.save_sale
      tags:
        - Sales, Purchases
      summary: Save a list of sales
      description: Save a list of sales
      responses:
        200:
          description: Successfully saved sales

    put:
      parameters:
        - name: sales
          in: body
          description: a list of sales to be saved
          required: True
          schema:
            type: object
            properties:
              sales:
                type: array
                items:
                  type: object
                  properties:
                      idSales:
                        type: integer
                      Date_sales:
                        type: string
                      CodSales:
                        type: integer
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      Customer:
                        type: string
                      idCustomers:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Service:
                        type: string
                      idServices:
                        type: integer
                      Receipt:
                        type: number
                      idReceipts:
                        type: integer
                      idDeliveries:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.update_sale
      tags:
        - Sales, Purchases
      summary: Update sales records
      description: Use the list of sales to update records
      responses:
        200:
          description: Successfully read table operation

  /salesbydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns sales in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_sale_by_date
      tags:
        - Sales, Purchases
      summary: Read the table sales using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all sales in that interval.
        If interval=false (default) return the sales for individual dates in the list.
      responses:
        200:
          description: Successfully read sales by date

  /purchases/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_purchases
      tags:
        - Sales, Purchases
      summary: Read the table purchases
      description: |
        Read the table purchases by ids.
      responses:
        200:
          description: Successfully read purchases

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_purchases
      tags:
        - Sales, Purchases
      summary: Delete rows of the table purchases
      description: Find all given ids and delete corresponding rows in the table purchases.
      responses:
        200:
          description: Successfully deleted purchases.

  /purchases:
    post:
      parameters:
        - name: purchases
          in: body
          description: a list of purchases to be saved
          required: True
          schema:
            type: object
            properties:
              purchases:
                type: array
                items:
                  type: object
                  properties:
                      idPurchases:
                        type: integer
                      CodPurchase:
                        type: integer
                      Date_purchases:
                        type: string
                      Date_delivery:
                        type: string
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      Supplier:
                        type: string
                      idSuppliers:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Payment:
                        type: number
                      idPayments:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.save_purchases
      tags:
        - Sales, Purchases
      summary: Save a list of purchases
      description: Save a list of purchases
      responses:
        200:
          description: Successfully saved purchases

    put:
      parameters:
        - name: purchases
          in: body
          description: a list of purchases to be updated
          required: True
          schema:
            type: object
            properties:
              purchases:
                type: array
                items:
                  type: object
                  properties:
                      idPurchases:
                        type: integer
                      CodPurchase:
                        type: integer
                      Date_purchases:
                        type: string
                      Date_delivery:
                        type: string
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      Supplier:
                        type: string
                      idSuppliers:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Payment:
                        type: number
                      idPayments:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.update_purchases
      tags:
        - Sales, Purchases
      summary: Update purchases records
      description: Use the list of purchases to update records
      responses:
        200:
          description: Successfully updated purchases

  /purchasesbydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns purchases in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_purchases_by_date
      tags:
        - Sales, Purchases
      summary: Read the table purchases using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all purchases in that interval.
        If interval=false (default) return the purchases for individual dates in the list.
      responses:
        200:
          description: Successfully read purchases by date


#COSTUMERS, EMPLOYEES, SUPPLIERS
  /customers/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_customers
      tags:
        - Customers, employees, suppliers
      summary: Read the table customers by id.
      description: |
        Read the table customers by ids.
      responses:
        200:
          description: Successfully read customers.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted.
      operationId: db_views.delete_customers
      tags:
        - Customers, employees, suppliers
      summary: Delete rows of the table customers
      description: Find all ids given and deletecorresponding rows in the table customers.
      responses:
        200:
          description: Successfully deleted customers.

  /customers:
    post:
      parameters:
        - name: customers
          in: body
          description: a list of customers to be saved
          required: True
          schema:
            type: object
            properties:
              customers:
                type: array
                items:
                  type: object
                  properties:
                      idCustomers:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Addresses:
                        type: integer
      operationId: db_views.save_customers
      tags:
        - Customers, employees, suppliers
      summary: Save a list of customers
      description: Save a list of customers
      responses:
        200:
          description: Successfully saved customers.

    put:
      parameters:
        - name: customers
          in: body
          description: a list of customers to be updated
          required: True
          schema:
            type: object
            properties:
              customers:
                type: array
                items:
                  type: object
                  properties:
                      idCustomers:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Addresses:
                        type: integer
      operationId: db_views.update_customers
      tags:
        - Customers, employees, suppliers
      summary: Update customers records
      description: Use the list of customers to update records
      responses:
        200:
          description: Successfully updated customers


  /employees/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_employees
      tags:
        - Customers, employees, suppliers
      summary: Read the table employees
      description: |
        Read the table employees by ids.
      responses:
        200:
          description: Successfully read employees.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All ids that matches will be deleted
      operationId: db_views.delete_employees
      tags:
        - Customers, employees, suppliers
      summary: Delete rows of the table employees
      description: Find all the ids given and delete corresponding rows in the table employees.
      responses:
        200:
          description: Successfully deleted employees.

  /employees:
    post:
      parameters:
        - name: employees
          in: body
          description: a list of employees to be saved
          required: True
          schema:
            type: object
            properties:
              employees:
                type: array
                items:
                  type: object
                  properties:
                      idEmployees:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Address:
                        type: integer
                      Role:
                        type: string
                      idRoles:
                        type: integer
      operationId: db_views.save_employees
      tags:
        - Customers, employees, suppliers
      summary: Save a list of employees
      description: Save a list of employees
      responses:
        200:
          description: Successfully saved employees

    put:
      parameters:
        - name: employees
          in: body
          description: a list of employees to be updated
          required: True
          schema:
            type: object
            properties:
              employees:
                type: array
                items:
                  type: object
                  properties:
                      idEmployees:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Address:
                        type: integer
                      Role:
                        type: string
                      idRoles:
                        type: integer
      operationId: db_views.update_employees
      tags:
        - Customers, employees, suppliers
      summary: Update employees records
      description: Use the list of employees to update records
      responses:
        200:
          description: Successfully updated employees.


  /suppliers/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_suppliers
      tags:
        - Customers, employees, suppliers
      summary: Read the table suppliers
      description: |
        Read the table suppliers by ids.
      responses:
        200:
          description: Successfully read suppliers.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_suppliers
      tags:
        - Customers, employees, suppliers
      summary: Delete rows of the table suppliers
      description: Find all ids given and delete corresponding rows in the table suppliers.
      responses:
        200:
          description: Successfully deleted suppliers.

  /suppliers:
    post:
      parameters:
        - name: suppliers
          in: body
          description: a list of suppliers to be saved
          required: True
          schema:
            type: object
            properties:
              suppliers:
                type: array
                items:
                  type: object
                  properties:
                      idSuppliers:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Address:
                        type: integer
      operationId: db_views.save_suppliers
      tags:
        - Customers, employees, suppliers
      summary: Save a list of suppliers
      description: Save a list of suppliers
      responses:
        200:
          description: Successfully saved suppliers

    put:
      parameters:
        - name: suppliers
          in: body
          description: a list of suppliers to be updated
          required: True
          schema:
            type: object
            properties:
              suppliers:
                type: array
                items:
                  type: object
                  properties:
                      idSuppliers:
                        type: integer
                      Name:
                        type: string
                      Telephone:
                        type: string
                      Address:
                        type: integer
      operationId: db_views.update_suppliers
      tags:
        - Customers, employees, suppliers
      summary: Update suppliers records
      description: Use the list of suppliers to update records
      responses:
        200:
          description: Successfully read suppliers.


#PRODUCTS, SERVICES
  /products/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_products
      tags:
        - Products, services
      summary: Read the table products
      description: |
        Read the table products by ids.
      responses:
        200:
          description: Successfully read products.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_products
      tags:
        - Products, services
      summary: Delete rows of the table products
      description: Find all ids given and deletecorresponding rows in the table products.
      responses:
        200:
          description: Successfully deleted products.

  /products:
    post:
      parameters:
        - name: products
          in: body
          description: a list of products to be saved
          required: True
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  type: object
                  properties:
                      idProducts:
                        type: integer
                      Name:
                        type: string
                      Supplier:
                        type: string
                      idSuppliers:
                        type: integer
                      Cost:
                        type: number
                      Price:
                        type: number
      operationId: db_views.save_products
      tags:
        - Products, services
      summary: Save a list of products
      description: Save a list of products
      responses:
        200:
          description: Successfully saved products.

    put:
      parameters:
        - name: products
          in: body
          description: a list of products to be updated
          required: True
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  type: object
                  properties:
                      idProducts:
                        type: integer
                      Name:
                        type: string
                      Supplier:
                        type: string
                      idSuppliers:
                        type: integer
                      Cost:
                        type: number
                      Price:
                        type: number
      operationId: db_views.update_products
      tags:
        - Products, services
      summary: Update products records
      description: Use the list of products to update records
      responses:
        200:
          description: Successfully read products.

  /services/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_services
      tags:
        - Products, services
      summary: Read the table services
      description: |
        Read the table services by ids.
      responses:
        200:
          description: Successfully read services.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_services
      tags:
        - Products, services
      summary: Delete rows of the table services
      description: Find all ids given and delete all corresponding rows in the table products.
      responses:
        200:
          description: Successfully deleted services.

  /services:
    post:
      parameters:
        - name: services
          in: body
          description: a list of services to be saved
          required: True
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  type: object
                  properties:
                      idServices:
                        type: integer
                      Name:
                        type: string
                      Cost:
                        type: number
                      Price:
                        type: number
                      Time:
                        type: integer
                      Description:
                        type: string
      operationId: db_views.save_services
      tags:
        - Products, services
      summary: Save a list of services
      description: Save a list of services
      responses:
        200:
          description: Successfully saved services.

    put:
      parameters:
        - name: services
          in: body
          description: a list of services to be updated
          required: True
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  type: object
                  properties:
                      idServices:
                        type: integer
                      Name:
                        type: string
                      Cost:
                        type: number
                      Price:
                        type: number
                      Time:
                        type: integer
                      Description:
                        type: string
      operationId: db_views.update_services
      tags:
        - Products, services
      summary: Update services records
      description: Use the list of services to update records
      responses:
        200:
          description: Successfully updated services.


#PAYMENTS, RECEIPTS, EXPENSES, CASH_REGISTER
  /payments/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_payments
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table payments
      description: |
        Read the table payments by ids.
      responses:
        200:
          description: Successfully read payments.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_payments
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Delete rows of the table payments
      description: Find all ids given and deletecorresponding rows in the table payments.
      responses:
        200:
          description: Successfully deleted payments.

  /payments:
    post:
      parameters:
        - name: payments
          in: body
          description: a list of payments to be saved
          required: True
          schema:
            type: object
            properties:
              payments:
                type: array
                items:
                  type: object
                  properties:
                      idPayments:
                        type: integer
                      idPurchases:
                        type: integer
                      CodPurchases:
                        type: integer
                      Date_payments:
                        type: string
                      Value:
                        type: number
      operationId: db_views.save_payments
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Save a list of payments
      description: Save a list of payments
      responses:
        200:
          description: Successfully saved payments.

    put:
      parameters:
        - name: payments
          in: body
          description: a list of payments to be updated
          required: True
          schema:
            type: object
            properties:
              payments:
                type: array
                items:
                  type: object
                  properties:
                      idPayments:
                        type: integer
                      idPurchases:
                        type: integer
                      CodPurchases:
                        type: integer
                      Date_payments:
                        type: string
                      Value:
                        type: number
      operationId: db_views.update_payments
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Update payments records
      description: Use the list of payments to update records
      responses:
        200:
          description: Successfully updated payments.

  /paymentsbydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns payments in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_payments_by_date
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table payments using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all payments in that interval.
        If interval=false (default) return the payments for individual dates in the list.
      responses:
        200:
          description: Successfully read payments by date

  /receipts/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_receipts
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table receipts
      description: |
        Read the table receipts by ids.
      responses:
        200:
          description: Successfully read receipts.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_receipts
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Delete rows of the table receipts
      description: Find all ids given and delete all corresponding rows in the table receipts.
      responses:
        200:
          description: Successfully deleted receipts.

  /receipts:
    post:
      parameters:
        - name: receipts
          in: body
          description: a list of receipts to be saved
          required: True
          schema:
            type: object
            properties:
              receipts:
                type: array
                items:
                  type: object
                  properties:
                      idReceipts:
                        type: integer
                      idSales:
                        type: integer
                      CodSales:
                        type: integer
                      Date_receipts:
                        type: string
                      Value:
                        type: number
      operationId: db_views.save_receipts
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Save a list of receipts
      description: Save a list of receipts
      responses:
        200:
          description: Successfully saved receipts.

    put:
      parameters:
        - name: receipts
          in: body
          description: a list of receipts to be updated
          required: True
          schema:
            type: object
            properties:
              receipts:
                type: array
                items:
                  type: object
                  properties:
                      idReceipts:
                        type: integer
                      idSales:
                        type: integer
                      CodSales:
                        type: integer
                      Date_receipts:
                        type: string
                      Value:
                        type: number
      operationId: db_views.update_receipts
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Update receipts records
      description: Use the list of receipts to update records
      responses:
        200:
          description: Successfully updated receipts.

  /receiptsbydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns receipts in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_receipts_by_date
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table receipts using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all receipts in that interval.
        If interval=false (default) return the receipts for individual dates in the list.
      responses:
        200:
          description: Successfully read receipts by date


  /expenses/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_expenses
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table expenses
      description: |
        Read the table expenses by ids.
      responses:
        200:
          description: Successfully read expenses.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_expenses
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Delete rows of the table expenses
      description: Find all ids given and delete all corresponding rows in the table expenses.
      responses:
        200:
          description: Successfully deleted expenses.

  /expenses:
    post:
      parameters:
        - name: expenses
          in: body
          description: a list of expenses to be saved
          required: True
          schema:
            type: object
            properties:
              expenses:
                type: array
                items:
                  type: object
                  properties:
                      idExpenses:
                        type: integer
                      Date:
                        type: string
                      Name:
                        type: string
                      Value:
                        type: number
      operationId: db_views.save_expenses
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Save a list of expenses
      description: Save a list of expenses
      responses:
        200:
          description: Successfully saved expenses.

    put:
      parameters:
        - name: expenses
          in: body
          description: a list of expenses to be updated
          required: True
          schema:
            type: object
            properties:
              expenses:
                type: array
                items:
                  type: object
                  properties:
                      idExpenses:
                        type: integer
                      Date:
                        type: string
                      Name:
                        type: string
                      Value:
                        type: number
      operationId: db_views.update_expenses
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Update expenses records
      description: Use the list of expenses to update records
      responses:
        200:
          description: Successfully updated expenses.

  /expensesbydate/{interval}/{dates}:
    get:
      parameters:
        - in: "path"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns expenses in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_expenses_by_date
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table pexpenses using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all expenses in that interval.
        If interval=false (default) return the expenses for individual dates in the list.
      responses:
        200:
          description: Successfully read expenses by date

  /cash_register/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_cash_register
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table cash_register
      description: |
        Read the table cash_register by ids.
      responses:
        200:
          description: Successfully read cash_register.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_cash_register
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Delete rows of the table cash_register
      description: Find all ids given and deletecorresponding rows in the table cash_register.
      responses:
        200:
          description: Successfully deleted cash_register.

  /cash_register:
    post:
      parameters:
        - name: cash_register
          in: body
          description: a list of cash_register records to be saved
          required: True
          schema:
            type: object
            properties:
              cash_register:
                type: array
                items:
                  type: object
                  properties:
                      idCash_register:
                        type: integer
                      Date_cash_register:
                        type: string
                      Cash_value:
                        type: number
                      Withdraw:
                        type: number
                      Deposit:
                        type: number
                      Expense:
                        type: number
                      idExpenses:
                        type: integer
                      Payment:
                        type: number
                      idPayments:
                        type: integer
                      Receipts:
                        type: number
                      idReceipts:
                        type: integer
      operationId: db_views.save_cash_register
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Save a list of cash_register
      description: Save a list of cash_register
      responses:
        200:
          description: Successfully saved cash_register.

    put:
      parameters:
        - name: cash_register
          in: body
          description: a list of cash_register records to be updated
          required: True
          schema:
            type: object
            properties:
              cash_register:
                type: array
                items:
                  type: object
                  properties:
                      idCash_register:
                        type: integer
                      Date_cash_register:
                        type: string
                      Cash_value:
                        type: number
                      Withdraw:
                        type: number
                      Deposit:
                        type: number
                      Expense:
                        type: number
                      idExpenses:
                        type: integer
                      Payment:
                        type: number
                      idPayments:
                        type: integer
                      Receipts:
                        type: number
                      idReceipts:
                        type: integer
      operationId: db_views.update_cash_register
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Update cash_register records
      description: Use the list of cash_register to update records
      responses:
        200:
          description: Successfully updated cash_register.

  /cash_registerbydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns cash_register in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_cash_register_by_date
      tags:
        - Payments, receipts, expenses, cash_register
      summary: Read the table cash_register using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all cash_register in that interval.
        If interval=false (default) return the cash_register for individual dates in the list.
      responses:
        200:
          description: Successfully read cash_register by date


#AGENDA, APPOINTMENTS, ACTIVITIES, ROLES
  /agenda/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_agenda
      tags:
        - Agenda, appointments, activities, roles
      summary: Read the table agenda
      description: |
        Read the table agenda by ids.
      responses:
        200:
          description: Successfully read agenda.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_agenda
      tags:
        - Agenda, appointments, activities, roles
      summary: Delete rows of the table agenda
      description: Find all ids given and delete corresponding rows in the table agenda.
      responses:
        200:
          description: Successfully deleted agenda.

  /agenda:
    post:
      parameters:
        - name: agenda
          in: body
          description: a list of agenda records to be saved
          required: True
          schema:
            type: object
            properties:
              agenda:
                type: array
                items:
                  type: object
                  properties:
                      idAgenda:
                        type: integer
                      Date_agenda:
                        type: string
                      Time_begin:
                        type: string
                      Time_finish:
                        type: string
                      Activity:
                        type: string
                      idActivities:
                        type: integer
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.save_agenda
      tags:
        - Agenda, appointments, activities, roles
      summary: Save a list of agenda
      description: Save a list of agenda
      responses:
        200:
          description: Successfully saved agenda.

    put:
      parameters:
        - name: agenda
          in: body
          description: a list of agenda records to be updated
          required: True
          schema:
            type: object
            properties:
              agenda:
                type: array
                items:
                  type: object
                  properties:
                      idAgenda:
                        type: integer
                      Date_agenda:
                        type: string
                      Time_begin:
                        type: string
                      Time_finish:
                        type: string
                      Activity:
                        type: string
                      idActivities:
                        type: integer
                      Employee:
                        type: string
                      idEmployees:
                        type: integer
                      idAppointments:
                        type: integer
      operationId: db_views.update_agenda
      tags:
        - Agenda, appointments, activities, roles
      summary: Update agenda records
      description: Use the list of agenda to update records
      responses:
        200:
          description: Successfully updated agenda.

  /agendabydate/{dates}:
    get:
      parameters:
        - in: "query"
          name: interval
          required: true
          type: boolean
          default: false
          description: if true returns agenda in an interval defined by two dates
        - in: "path"
          name: dates
          required: true
          type: array
          items:
            type: string
            format: date
          description: a list of dates to the search. Only 2 first dates are used if interval=true
      operationId: db_views.get_agenda_by_date
      tags:
        - Agenda, appointments, activities, roles
      summary: Read the table agenda using a list of dates or an interval.
      description: |
        If interval=true, uses two dates to define an interval and return all agenda in that interval.
        If interval=false (default) return the agenda for individual dates in the list.
      responses:
        200:
          description: Successfully read agenda by date

  /appointments/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_appointments
      tags:
        - Agenda, appointments, activities, roles
      summary: Read the table appointments
      description: |
        Read the table appointments by column using a list of values.
      responses:
        200:
          description: Successfully read appointments.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_appointments
      tags:
        - Agenda, appointments, activities, roles
      summary: Delete rows of the table appointments
      description: Find all ids given and delete all corresponding rows in the table appointments.
      responses:
        200:
          description: Successfully deleted appointments.

  /appointments:
    post:
      parameters:
        - name: appointments
          in: body
          description: a list of appointments records to be saved
          required: True
          schema:
            type: object
            properties:
              appointments:
                type: array
                items:
                  type: object
                  properties:
                      idAppointments:
                        type: integer
                      idSales:
                        type: integer
                      idPurchases:
                        type: integer
                      idAgenda:
                        type: integer
      operationId: db_views.save_appointments
      tags:
        - Agenda, appointments, activities, roles
      summary: Save a list of appointments
      description: Save a list of appointments
      responses:
        200:
          description: Successfully saved appointments.

    put:
      parameters:
        - name: appointments
          in: body
          description: a list of appointments records to be updated
          required: True
          schema:
            type: object
            properties:
              appointments:
                type: array
                items:
                  type: object
                  properties:
                      idAppointments:
                        type: integer
                      idSales:
                        type: integer
                      idPurchases:
                        type: integer
                      idAgenda:
                        type: integer
      operationId: db_views.update_appointments
      tags:
        - Agenda, appointments, activities, roles
      summary: Update appointments records
      description: Use the list of appointments to update records
      responses:
        200:
          description: Successfully updated appointments.

  /activities/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_activities
      tags:
        - Agenda, appointments, activities, roles
      summary: Read the table activities
      description: |
        Read the table activities by ids.
      responses:
        200:
          description: Successfully read activities.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_activities
      tags:
        - Agenda, appointments, activities, roles
      summary: Delete rows of the table activities
      description: Find all ids given and delete corresponding rows in the table activities.
      responses:
        200:
          description: Successfully deleted activities.

  /activities:
    post:
      parameters:
        - name: activities
          in: body
          description: a list of activities records to be saved
          required: True
          schema:
            type: object
            properties:
              activities:
                type: array
                items:
                  type: object
                  properties:
                      idActivities:
                        type: integer
                      Name:
                        type: string
                      Description:
                        type: string
      operationId: db_views.save_activities
      tags:
        - Agenda, appointments, activities, roles
      summary: Save a list of activities
      description: Save a list of activities
      responses:
        200:
          description: Successfully saved activities.

    put:
      parameters:
        - name: activities
          in: body
          description: a list of activities records to be updated
          required: True
          schema:
            type: object
            properties:
              activities:
                type: array
                items:
                  type: object
                  properties:
                      idActivities:
                        type: integer
                      Name:
                        type: string
                      Description:
                        type: string
      operationId: db_views.update_activities
      tags:
        - Agenda, appointments, activities, roles
      summary: Update activities records
      description: Use the list of activities to update records
      responses:
        200:
          description: Successfully updated activities.

  /roles/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_roles
      tags:
        - Agenda, appointments, activities, roles
      summary: Read the table roles
      description: |
        Read the table roles by ids.
      responses:
        200:
          description: Successfully read roles.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_roles
      tags:
        - Agenda, appointments, activities, roles
      summary: Delete rows of the table roles
      description: Find all ids given and delete corresponding rows in the table roles.
      responses:
        200:
          description: Successfully deleted roles.

  /roles:
    post:
      parameters:
        - name: roles
          in: body
          description: a list of roles records to be saved
          required: True
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  type: object
                  properties:
                      idRoles:
                        type: integer
                      Name:
                        type: string
                      Buy:
                        type: boolean
                      Sale:
                        type: boolean
                      Delivery:
                        type: boolean
                      Receive:
                        type: boolean
      operationId: db_views.save_roles
      tags:
        - Agenda, appointments, activities, roles
      summary: Save a list of roles
      description: Save a list of roles
      responses:
        200:
          description: Successfully saved roles.

    put:
      parameters:
        - name: roles
          in: body
          description: a list of roles records to be updated
          required: True
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  type: object
                  properties:
                      idRoles:
                        type: integer
                      Name:
                        type: string
                      Buy:
                        type: boolean
                      Sale:
                        type: boolean
                      Delivery:
                        type: boolean
                      Receive:
                        type: boolean
      operationId: db_views.update_roles
      tags:
        - Agenda, appointments, activities, roles
      summary: Update roles records
      description: Use the list of roles to update records
      responses:
        200:
          description: Successfully updated roles.


#INVENTORIES, ADDRESSES, DELIVERIES
  /inventories/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_inventories
      tags:
        - Inventories, addresses, deliveries
      summary: Read the table inventories
      description: |
        Read the table inventories by ids.
      responses:
        200:
          description: Successfully read inventories.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_inventories
      tags:
        - Inventories, addresses, deliveries
      summary: Delete rows of the table inventories
      description: Find all ids given and delete corresponding rows in the table inventories.
      responses:
        200:
          description: Successfully deleted inventories.

  /inventories:
    post:
      parameters:
        - name: inventories
          in: body
          description: a list of inventories records to be saved
          required: True
          schema:
            type: object
            properties:
              inventories:
                type: array
                items:
                  type: object
                  properties:
                      idInventories:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Quantity:
                        type: integer
      operationId: db_views.save_inventories
      tags:
        - Inventories, addresses, deliveries
      summary: Save a list of inventories
      description: Save a list of inventories
      responses:
        200:
          description: Successfully saved inventories.

    put:
      parameters:
        - name: inventories
          in: body
          description: a list of inventories records to be updated
          required: True
          schema:
            type: object
            properties:
              inventories:
                type: array
                items:
                  type: object
                  properties:
                      idInventories:
                        type: integer
                      Product:
                        type: string
                      idProducts:
                        type: integer
                      Quantity:
                        type: integer
      operationId: db_views.update_inventories
      tags:
        - Inventories, addresses, deliveries
      summary: Update inventories records
      description: Use the list of inventories to update records
      responses:
        200:
          description: Successfully updated inventories.

  /address/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_address
      tags:
        - Inventories, addresses, deliveries
      summary: Read the table addresses
      description: |
        Read the table addresses by ids.
      responses:
        200:
          description: Successfully read addresses.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_address
      tags:
        - Inventories, addresses, deliveries
      summary: Delete rows of the table addresses
      description: Find all ids given and delete corresponding rows in the table addresses.
      responses:
        200:
          description: Successfully deleted addresses.

  /address:
    post:
      parameters:
        - name: address
          in: body
          description: a list of addresses records to be saved
          required: True
          schema:
            type: object
            properties:
              address:
                type: array
                items:
                  type: object
                  properties:
                      idAddress:
                        type: integer
                      State:
                        type: string
                      City:
                        type: string
                      District:
                        type: string
                      Street:
                        type: string
                      Number:
                        type: string
                      CEP:
                        type: string
      operationId: db_views.save_address
      tags:
        - Inventories, addresses, deliveries
      summary: Save a list of addresses
      description: Save a list of addresses
      responses:
        200:
          description: Successfully saved addresses.

    put:
      parameters:
        - name: address
          in: body
          description: a list of addresses records to be updated
          required: True
          schema:
            type: object
            properties:
              address:
                type: array
                items:
                  type: object
                  properties:
                      idAddress:
                        type: integer
                      State:
                        type: string
                      City:
                        type: string
                      District:
                        type: string
                      Street:
                        type: string
                      Number:
                        type: string
                      CEP:
                        type: string
      operationId: db_views.update_address
      tags:
        - Inventories, addresses, deliveries
      summary: Update addresses records
      description: Use the list of addresses to update records
      responses:
        200:
          description: Successfully updated addresses.

  /deliveries/{values}:
    get:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: the ids to be used in the search
      operationId: db_views.get_deliveries
      tags:
        - Inventories, addresses, deliveries
      summary: Read the table deliveries
      description: |
        Read the table deliveries by ids.
      responses:
        200:
          description: Successfully read deliveries.

    delete:
      parameters:
        - in: "path"
          name: values
          required: true
          type: array
          items:
            type: string
          description: |
            the ids to be used in the search and delete. All values that matches will be deleted
      operationId: db_views.delete_deliveries
      tags:
        - Inventories, addresses, deliveries
      summary: Delete rows of the table deliveries
      description: Find all ids given and delete corresponding rows in the table deliveries.
      responses:
        200:
          description: Successfully deleted deliveries.

  /deliveries:
    post:
      parameters:
        - name: deliveries
          in: body
          description: a list of deliveries records to be saved
          required: True
          schema:
            type: object
            properties:
              deliveries:
                type: array
                items:
                  type: object
                  properties:
                      idDeliveries:
                        type: integer
                      idSales:
                        type: integer
                      CodSales:
                        type: integer
                      Date_delivery:
                        type: string
                      Address:
                        type: integer
      operationId: db_views.save_deliveries
      tags:
        - Inventories, addresses, deliveries
      summary: Save a list of deliveries
      description: Save a list of deliveries
      responses:
        200:
          description: Successfully saved deliveries.

    put:
      parameters:
        - name: deliveries
          in: body
          description: a list of deliveries records to be updated
          required: True
          schema:
            type: object
            properties:
              deliveries:
                type: array
                items:
                  type: object
                  properties:
                      idDeliveries:
                        type: integer
                      idSales:
                        type: integer
                      CodSales:
                        type: integer
                      Date_delivery:
                        type: string
                      Address:
                        type: integer
      operationId: db_views.update_deliveries
      tags:
        - Inventories, addresses, deliveries
      summary: Update deliveries records
      description: Use the list of deliveries to update records
      responses:
        200:
          description: Successfully updated deliveries.